#apiVersion: v1
apiVersion: apps/v1
#kind: ReplicationController
#apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    name: springboot
  name: spring-controller
spec:
  replicas: 2
  strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 25%
  template:
    metadata:
      labels:
        name: springboot
    spec:
      containers:
      - image: phanikumary1995/test-app
        imagePullPolicy: Always
        name: springboot
        ports:
        - name: springboot
          containerPort: 8080
        readinessProbe:
          httpGet:
             path: /
             port: 8080
             initialDelaySeconds: 5
             periodSeconds: 5
             successThreshold: 1		  
---
# Node Port Service
apiVersion: v1
kind: Service
metadata:
  labels:
    name: springboot
  name: springboot
spec:
#  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    name: springboot
  clusterIP: None
---
# Mongo host path rc
#apiVersion: v1
#kind: ReplicationController
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    name: mongo
  name: mongo-controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage
        hostPath:
         path: /tmp/dbbackup
---
# Mongo Node Port RC
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
  name: mongo
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    name: mongo
